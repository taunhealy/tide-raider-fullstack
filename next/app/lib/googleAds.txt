import { GoogleAdsApi } from "google-ads-api";

const googleAds = new GoogleAdsApi({
  client_id: process.env.GOOGLE_ADS_CLIENT_ID!,
  client_secret: process.env.GOOGLE_ADS_CLIENT_SECRET!,
  developer_token: process.env.GOOGLE_ADS_DEVELOPER_TOKEN!,
  customer_id_: process.env.GOOGLE_ADS_CUSTOMER_ID!,
});

interface GoogleAdsCampaignConfig {
  name: string;
  additionalBudget: number;
  keywords: string[];
  location?: string;
  campaignId?: string;
}

const CAMPAIGN_ID = process.env.GOOGLE_ADS_CAMPAIGN_ID;

export async function updateGoogleAdsCampaign(config: GoogleAdsCampaignConfig) {
  try {
    let campaign;

    // Try to get existing campaign
    if (config.campaignId) {
      campaign = await googleAds.campaigns.get(config.campaignId);

      // Update existing campaign budget
      await googleAds.campaigns.update(config.campaignId, {
        budget: campaign.budget + config.additionalBudget,
      });

      return {
        id: config.campaignId,
        status: "UPDATED",
      };
    } else {
      // Create new campaign if none exists
      campaign = await googleAds.campaigns.create({
        name: config.name,
        budget: config.additionalBudget,
        keywords: config.keywords,
        location: config.location,
      });

      return {
        id: campaign.id,
        status: "CREATED",
      };
    }
  } catch (error) {
    console.error("Error managing Google Ads campaign:", error);
    throw error;
  }
}
